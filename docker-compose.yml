services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    networks:
      - warehouse-network

  backend:
    build:
      context: ./backend
      dockerfile: WarehouseAppBackend/Dockerfile
    ports:
    - "5210:5210"
    networks:
      - warehouse-network
    depends_on:
      - sqlserver
    environment:
      - ConnectionStrings__DefaultConnection=Server=${DB_SERVER};Database=${DB_NAME};User=${DB_USER};Password=${DB_PASSWORD};TrustServerCertificate=True;MultipleActiveResultSets=True;Connect Timeout=60;
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5210
    restart: unless-stopped

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: warehouse-sqlserver
    environment:
      SA_PASSWORD: ${DB_PASSWORD}
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
      MSSQL_AGENT_ENABLED: "true"
      MSSQL_DATABASE: "WarehouseDB"
    ports:
      - "1433:1433"
    networks:
      - warehouse-network
    volumes:
      - sqlserver-data:/var/opt/mssql
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${DB_PASSWORD} -Q "SELECT 1" -b -o /dev/null
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s
    restart: unless-stopped

volumes:
  sqlserver-data:

networks:
  warehouse-network:
    driver: bridge